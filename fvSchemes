/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
    limited         cellLimited Gauss linear 0.5;//1;
}

divSchemes
{
    default                         none;

    div(phi,alpha)            Gauss vanLeer;
    div(phir,alpha)           Gauss vanLeer;

   // div(alphaRhoPhi,U)      Gauss linearUpwind limited;
    //div(phi,U)              Gauss linearUpwind limited;
       // Change to more stable upwind for initial runs
    div(alphaRhoPhi,U)        Gauss upwind;  
    div(phi,U)                Gauss upwind;

   // div(alphaRhoPhi,Yi)       Gauss linearUpwind limited;
   // "div\(alphaRhoPhi,(h|e)\)"  Gauss linearUpwind limited;
   // div(alphaRhoPhi,K)      Gauss linearUpwind limited;
   // div(alphaRhoPhi,(p|rho)) Gauss linearUpwind limited;
   // div(phi,kappai)         Gauss linearUpwind limited;
    //"div\(alphaRhoPhi,(k|epsilon|omega)\)"  Gauss linearUpwind limited;
    //"div\(phim,(k|epsilon)m\)"      Gauss linearUpwind limited;
    
    
    div(alphaRhoPhi,Yi)       Gauss upwind;
    "div\(alphaRhoPhi,(h|e)\)"  Gauss upwind;  // Energy equation needs stability
    div(alphaRhoPhi,K)        Gauss upwind;
    div(alphaRhoPhi,(p|rho))  Gauss upwind;
    div(phi,kappai)           Gauss upwind;
    "div\(alphaRhoPhi,(k|epsilon|omega)\)"  Gauss upwind;
    "div\(phim,(k|epsilon)m\)"      Gauss upwind;

    div((((alpha*rho)*nuEff)*dev2(T(grad(U))))) Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

wallDist
{
    method          meshWave;
    nRequired       yes;
}


// ************************************************************************* //
